{"version":3,"file":"static/js/455.0ec25522.chunk.js","mappings":"qMACA,EAAuB,wBAAvB,EAAyD,2BAAzD,EAA8F,2BAA9F,EAAmI,2B,SC4DnI,EArDkB,SAACA,GACjB,IAAMC,GAAiBC,EAAAA,EAAAA,UACjBC,GAAeD,EAAAA,EAAAA,UACrB,GAAoCE,EAAAA,EAAAA,WAAS,GAAM,eAAhCC,GAAF,KAAe,MAqBhC,OACE,+BACE,SAACC,EAAA,EAAI,WACH,kBAAMC,QAPa,WACvBF,GAAc,EAChB,EAKuCG,UAAWC,EAAcC,SAtBhE,SAA2BC,GACzBA,EAAMC,iBAEN,IAAMC,EAAgBZ,EAAea,QAAQC,MACvCC,EAAcb,EAAaW,QAAQC,MAIzCf,EAAMiB,gBAAgB,CAAEC,OAAQL,EAAeM,KAAMH,GACvD,EAa4F,UACnFhB,EAAMoB,YACL,gBAAKZ,UAAWC,EAAgB,UAC9B,SAACY,EAAA,EAAc,OAInB,iBAAKb,UAAWC,EAAgB,WAC9B,kBAAOa,QAAQ,SAAQ,SAAC,YACxB,kBAAOC,KAAK,OAAOC,GAAG,SAASC,IAAKxB,QAEtC,iBAAKO,UAAWC,EAAgB,WAC9B,kBAAOa,QAAQ,OAAM,SAAC,UACtB,qBAAUE,GAAG,OAAOE,KAAK,IAAID,IAAKtB,QAEpC,gBAAKK,UAAWC,EAAgB,UAC9B,mBAAQkB,QA3BO,WACvBtB,GAAc,EAChB,EAyB6CG,UAAU,MAAK,SAAC,sBAQ/D,E,2BCxBA,EA7BiB,WACf,OAAuCoB,EAAAA,EAAAA,GAAQC,EAAAA,IAAvCC,EAAK,EAALA,MAAOC,EAAM,EAANA,OAAQC,EAAW,EAAXA,YACjBC,GAAWC,EAAAA,EAAAA,MAYjB,OANAC,EAAAA,EAAAA,YAAU,WACO,cAAXJ,GAA2BD,GAC7BG,EAAS,UAEb,GAAG,CAACF,EAAQD,EAAOG,IAEJ,cAAXF,GAA0BD,GAE1B,+BACE,uBAAIA,OAMR,+BACE,SAAC,EAAS,CAACV,UAAsB,YAAXW,EAAsBd,gBApBxB,SAACmB,GACvBJ,EAAYI,EACd,KAqBF,C","sources":["webpack://react-quotes/./src/components/quotes/QuoteForm.module.css?b10c","components/quotes/QuoteForm.js","components/pages/NewQuote.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"QuoteForm_form__ogBoi\",\"loading\":\"QuoteForm_loading__gyIuQ\",\"control\":\"QuoteForm_control__8SqBM\",\"actions\":\"QuoteForm_actions__I8AC6\"};","import { useRef, useState } from 'react';\n\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\n\n// import { Prompt } from 'react-router-dom';\n\nconst QuoteForm = (props) => {\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n  const [isEntering, setIsEntering] = useState(false);\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.addQuoteHandler({ author: enteredAuthor, text: enteredText });\n  }\n\n  const finishIsEntering = () => {\n    setIsEntering(false);\n  };\n\n  const formFocusHandler = () => {\n    setIsEntering(true);\n  };\n\n  return (\n    <>\n      <Card>\n        <form onFocus={formFocusHandler} className={classes.form} onSubmit={submitFormHandler}>\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor='author'>Author</label>\n            <input type='text' id='author' ref={authorInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor='text'>Text</label>\n            <textarea id='text' rows='5' ref={textInputRef}></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button onClick={finishIsEntering} className='btn'>\n              Add Quote\n            </button>\n          </div>\n        </form>\n      </Card>\n    </>\n  );\n};\n\nexport default QuoteForm;\n","import React, { useEffect } from 'react';\r\nimport QuoteForm from '../quotes/QuoteForm';\r\nimport useHttp from '../../hooks/use-http';\r\nimport { addQuote } from '../../lib/api';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst NewQuote = () => {\r\n  const { error, status, sendRequest } = useHttp(addQuote);\r\n  const navigate = useNavigate();\r\n\r\n  const addQuoteHandler = (quote) => {\r\n    sendRequest(quote);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (status === 'completed' && !error) {\r\n      navigate('/quotes');\r\n    }\r\n  }, [status, error, navigate]);\r\n\r\n  if (status === 'completed' && error) {\r\n    return (\r\n      <>\r\n        <p>{error}</p>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <QuoteForm isLoading={status === 'pending'} addQuoteHandler={addQuoteHandler} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewQuote;\r\n"],"names":["props","authorInputRef","useRef","textInputRef","useState","setIsEntering","Card","onFocus","className","classes","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","addQuoteHandler","author","text","isLoading","LoadingSpinner","htmlFor","type","id","ref","rows","onClick","useHttp","addQuote","error","status","sendRequest","navigate","useNavigate","useEffect","quote"],"sourceRoot":""}